{
  "ver": "1.0.27",
  "uuid": "54e899e0-822b-4b30-ac38-f6f96719a307",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matView;\nuniform mat4 cc_matProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\nvoid main () {\n    v_uv0 = a_uv0;\n    gl_Position = cc_matProj * cc_matView * cc_matWorld * vec4(a_position, 1.0);\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float glowIntensity;\nuniform float progress;\nuniform float alphaMultiplier;\nvoid main () {\n    vec4 col = texture2D(texture, v_uv0);\n    col.rgb = mix(col.rgb, vec3(1.0), progress);\n    float brightness = dot(col.rgb, vec3(0.333));\n    float glow = smoothstep(0.5, 1.0, brightness) * glowIntensity * progress;\n    col.rgb += glow;\n    col.a *= alphaMultiplier;\n    gl_FragColor = col;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec2 a_uv0;\nout vec2 v_uv0;\nvoid main () {\n    v_uv0 = a_uv0;\n    gl_Position = cc_matProj * cc_matView * cc_matWorld * vec4(a_position, 1.0);\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform Values {\n    float glowIntensity;\n    float progress;\n    float alphaMultiplier;\n};\nvoid main () {\n    vec4 col = texture(texture, v_uv0);\n    col.rgb = mix(col.rgb, vec3(1.0), progress);\n    float brightness = dot(col.rgb, vec3(0.333));\n    float glow = smoothstep(0.5, 1.0, brightness) * glowIntensity * progress;\n    col.rgb += glow;\n    col.a *= alphaMultiplier;\n    gl_FragColor = col;\n}"
      }
    }
  ],
  "subMetas": {}
}